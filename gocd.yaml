pipelines:
  test:
    group: test
    lock_behavior: none
    environment_variables:
      STORE_CODE: <none>
    materials:
      git:
        git: https://github.com/Dmytro-Ostapenko-97/gocd-test
        shallow_clone: false
        auto_update: true
        branch: master
    stages:
      # - terraform-destroy:
      #     fetch_materials: true
      #     keep_artifacts: false
      #     clean_workspace: true
      #     approval:
      #       type: manual
      #       allow_only_on_success: false
      #     jobs:
      #       destroy:
      #         timeout: 0
      #         elastic_profile_id: k8s-agent
      #         tasks:
      #           - exec:
      #               arguments:
      #                 - "-c"
      #                 - "cd deploy/stores/${STORE_CODE} \
      #                 && terraform init -backend-config=key=eks_infrastructure/stores/${STORE_CODE}/terraform.tfstate \
      #                 && terraform destroy -auto-approve"
      #               command: sh
      #               run_if: passed
      # - jenkins-destroy:
      #     fetch_materials: true
      #     keep_artifacts: false
      #     clean_workspace: true
      #     environment_variables:
      #       USERNAME: dmytro_ostapenko
      #       USER_API_TOKEN: 114a820a8760fda00155b7abb0d01ae157
      #       SERVER_URL: jenkins.gregacademy.icu
      #       DESTROY_PIPELINE: test
      #       JOB_TOKEN: XPBf3Md7MZwdts
      #       BUILD_TYPE: buildWithParameters     #cane be build or buildWithParameters  
      #     approval:
      #       type: manual
      #       allow_only_on_success: false
      #     jobs:
      #       destroy:
      #         timeout: 0
      #         elastic_profile_id: k8s-agent
      #         tasks:
      #           - exec:
      #               arguments:
      #                 - "-c"
      #                 - "curl -d STORE_CODE=${STORE_CODE} -i -X POST https://${USERNAME}:${USER_API_TOKEN}@${SERVER_URL}/job/${DESTROY_PIPELINE}/${BUILD_TYPE}?token=${JOB_TOKEN}"
      #               command: sh
      #               run_if: passed
      - ecr-destroy:
          fetch_materials: true
          keep_artifacts: false
          clean_workspace: true
          approval:
            type: manual
            allow_only_on_success: false
          jobs:
            destroy:
              timeout: 0
              elastic_profile_id: k8-agent-aws
              tasks:
                - exec:
                    arguments:
                      # - "aws ecr delete-repository --repository-name ${STORE_CODE} --force"
                      - "--version"                      
                    command: aws
                    run_if: passed
